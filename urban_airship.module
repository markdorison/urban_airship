<?php

/**
 * @file
 * Uses FAPI to build the Urban Airship submission page.
 * Written by Mark W. Jarrell (attheshow).
 */

/**
 * Implements hook_foo().
 */
function urban_airship_menu() {
  $items['admin/config/system/ua'] = array(
    'title' => 'Urban Airship',
    'description' => 'Configure how messages are sent by the site.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('urban_airship_admin_form'),
    'type' => MENU_NORMAL_ITEM,  
    'access arguments' => array('configure push notifications'),
  );
  $items['admin/ua'] = array(
    'title' => 'Send Push Notification',
    'description' => 'Send a message to students through the app.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('urban_airship_form'),
    'type' => MENU_NORMAL_ITEM,  
    'access arguments' => array('send push notifications'),
  );
  $items['admin/ua/sent'] = array(
    'title' => 'Push Notification Sent',
    'page callback' => 'urban_airship_sent',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function urban_airship_permission() {
  return array(
    'configure push notifications' => array(
      'title' => t('Configure the site for push messages to Urban Airship'),
      'description' => t('Allow users to configure push notifications.'),
    ),
    'send push notifications' => array(
      'title' => t('Send push messages to Urban Airship'),
      'description' => t('Allow users to send push notifications.'),
    ),
  );
}

/**
 * Form definition.
 */
function urban_airship_form($form, &$form_state) {

  // Wrapper div that goes around the entire form.
  $form['#prefix'] = '<div class="fapi-form">';
  $form['#suffix'] = '</div>';

  // Get the config vars.
  $urban_airship_url = variable_get('urban_airship_url');
  $urban_airship_app_key = variable_get('urban_airship_app_key');
  $urban_airship_app_master_secret = variable_get('urban_airship_app_master_secret');

  // Make sure we have all the vars we need.
  if (!empty($urban_airship_url) && !empty($urban_airship_app_key) && !empty($urban_airship_app_master_secret)) {
    // Build the form.
    $form['overview'] = array(
      '#type' => 'markup',
      '#markup' => t('<p>Use the form below to send a message to all users who have the app installed on their mobile devices.</p>')
    );
    $form['notification'] = array(
      '#type' => 'textarea',
      '#title' => t('Notification'),
      '#required' => TRUE,
      '#maxlength' => 157,
      '#maxlength_js' => TRUE,
    );
    $form['submit'] = array(
      '#type' => 'submit',
      '#value' => 'Send',
    );
  }
  else {
    drupal_set_message(t('Configuration variables are not set. Please go to <a href="/admin/config/system/ua">the configuration form</a> and correct this before attempting to send messages.'), 'error');
  }
  return $form;
}

/**
 * Submit handler for form button.
 */
function urban_airship_form_submit($form, &$form_state) {
  // Grab the message. Don't run check_plain or else characters get messed up. drupal_write_record below cleans it for us.
  $notification = $form_state['values']['notification'];

  // Get the config vars.
  $urban_airship_url = variable_get('urban_airship_url');
  $urban_airship_app_key = variable_get('urban_airship_app_key');
  $urban_airship_app_master_secret = variable_get('urban_airship_app_master_secret');

  // Send the message to  UrbanAirships.com using curl and JSON.
  // Build the JSON data.
  $json_data = array('aps' => array('badge' => 1, 'alert' => $notification));
  $json_encoded_data = json_encode((object)$json_data); // Note: (object) Forces it to be an object instead of an array. Works for PHP 5.2.
  //echo '<pre>';
  //print_r($json_encoded_data);
  //echo '</pre>';
  //exit;
  // Send it using curl!
  $c = curl_init($urban_airship_url);
  curl_setopt($c, CURLOPT_USERPWD, $urban_airship_app_key . ":" . $urban_airship_app_master_secret);
  curl_setopt($c, CURLOPT_POST, TRUE);
  curl_setopt($c, CURLOPT_POSTFIELDS, $json_encoded_data);
  curl_setopt($c, CURLOPT_HEADER, FALSE);
  curl_setopt($c, CURLOPT_RETURNTRANSFER, TRUE);
  curl_setopt($c, CURLOPT_HTTPHEADER, array('Content-Type: application/json'));
  curl_exec($c);
  // Check if any error occured
  $response = curl_getinfo($c);
  if ($response['http_code'] != 200) {
    $ua_response = "Got negative response from server, http code: " . $response['http_code'];
  }
  else {
    $ua_response = "Success.";
  }
  curl_close($c);

  // Add the record to our table.
  $table = 'urban_airship_push_notification';
  $record = new stdClass();
  $record->notification = $notification;
  $record->created = REQUEST_TIME;
  drupal_write_record($table, $record);
  // The ID, $record->id, was set by drupal_write_record() since $record is passed by reference.
  watchdog('urban_airship', 'Sent notification with id %id. Response was: %response', array('%id' => $record->id, '%response' => $ua_response));

  if (strstr($ua_response, 'Success.')) {
    drupal_set_message(t('Successfully sent the notification to the Urban Airship site.'));
  }
  else {
    drupal_set_message(t('Sent the notification to the Urban Airship site. The response from them was: %ua_response', array('%ua_response' => $ua_response)), 'error');
  }
  $form_state['redirect'] = 'admin/ua/sent';
}

/**
 * Page callback to show the success of the message.
 */
function urban_airship_sent() {
  return t('<a href="/admin/ua">Go back to send another notification?</a>');
}

/**
 * Admin form.
 */
function urban_airship_admin_form($form, &$form_state) {

  // Wrapper div that goes around the entire form.
  $form['#prefix'] = '<div class="fapi-form">';
  $form['#suffix'] = '</div>';

  // ! Step 1 - Send notification
  $form['overview'] = array(
    '#type' => 'markup',
    '#markup' => t('<p>Use the form below to configure how messages are sent to the Urban Airship site.</p>')
  );
  $form['urban_airship_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Broadcast URL'),
    '#required' => TRUE,
    '#default_value' => variable_get('urban_airship_url', 'https://go.urbanairship.com/api/push/broadcast/'),
  );
  $form['urban_airship_app_key'] = array(
    '#type' => 'textfield',
    '#title' => t('App Key'),
    '#required' => TRUE,
    '#default_value' => variable_get('urban_airship_app_key', ''),
  );
  $form['urban_airship_app_master_secret'] = array(
    '#type' => 'textfield',
    '#title' => t('App Master Secret'),
    '#required' => TRUE,
    '#default_value' => variable_get('urban_airship_app_master_secret', ''),
  );
  $form = system_settings_form($form);
  return $form;
}

/**
 * Tables are described to Views via hook_views_data(), which returns an array of table information, keyed by the name of the table.
 */
function urban_airship_views_data() {
  $data = array();

  /**
   * Expose urban_airship_push_notification table to views.
   */
  $data['urban_airship_push_notification']['table'] = array(
    'group' => 'Urban Airship notification',
    'base' => array(
      'field' => array('id', 'id'),
      'title' => 'UA notification',
      'help' => 'The notification',
    ),
  );
  $data['urban_airship_push_notification']['id'] = array(
    'title' => 'UA id',
    'help' => 'Contains the UA id of a notification.',
    'field' => array(
      'handler' => 'views_handler_field_numeric',
      'click sortable' => TRUE,
    ),
    'filter' => array(
      'handler' => 'views_handler_filter_numeric',
      'allow empty' => TRUE,
      'help' => 'Filter on UA id field.',
    ),
    'argument' => array(
      'handler' => 'views_handler_argument_numeric',
      'numeric' => TRUE,
      'validate type' => 'nid',
      'help' => 'Argument on a UA id field.',
    ),
    'sort' => array(
      'handler' => 'views_handler_sort',
      'help' => 'Sort UA id field.',
    ),
  );
  $data['urban_airship_push_notification']['created'] = array(
    'title' => t('Time'),
    'help' => t('The time the notification was sent.'),
    'field' => array(
      'handler' => 'views_handler_field_date',
      'click sortable' => TRUE,
    ),
    'sort' => array(
      'handler' => 'views_handler_sort_date',
    ),
    'filter' => array(
      'handler' => 'views_handler_filter_date',
    ),
  );
  $data['urban_airship_push_notification']['notification'] = array(
    'title' => 'Notification',
    'help' => 'The notification that was sent.',
    'sort' => array(
      'handler' => 'views_handler_sort',
    ),
    'filter' => array(
      'handler' => 'views_handler_filter_string',
    ),
    'argument' => array(
      'handler' => 'views_handler_argument_string',
    ),
    'field' => array(
      'handler' => 'views_handler_field',
      'click sortable' => TRUE,
    ),
  );
  return $data;
}

/**
 * Implements hook_views_api().
 */
function urban_airship_views_api() {
  return array(
    'api' => '3.0-alpha1',
  );
}

/**
 * Implements hook_views_default_views().
 */
function urban_airship_views_default_views() {
  $views = array();

  $view = new view;
  $view->name = 'urban_airship_push_notification';
  $view->description = 'Lists all messages that have been sent to users via the Urban Airship push notification system.';
  $view->tag = '';
  $view->base_table = 'urban_airship_push_notification';
  $view->human_name = 'Urban Airship Push Notifications';
  $view->core = 7;
  $view->api_version = '3.0-alpha1';
  $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
  
  /* Display: Master */
  $handler = $view->new_display('default', 'Master', 'default');
  $handler->display->display_options['title'] = 'Messages';
  $handler->display->display_options['access']['type'] = 'none';
  $handler->display->display_options['cache']['type'] = 'none';
  $handler->display->display_options['query']['type'] = 'views_query';
  $handler->display->display_options['query']['options']['query_comment'] = FALSE;
  $handler->display->display_options['exposed_form']['type'] = 'basic';
  $handler->display->display_options['pager']['type'] = 'full';
  $handler->display->display_options['pager']['options']['items_per_page'] = '10';
  $handler->display->display_options['style_plugin'] = 'list';
  $handler->display->display_options['row_plugin'] = 'fields';
  /* No results behavior: Global: Text area */
  $handler->display->display_options['empty']['area']['id'] = 'area';
  $handler->display->display_options['empty']['area']['table'] = 'views';
  $handler->display->display_options['empty']['area']['field'] = 'area';
  $handler->display->display_options['empty']['area']['label'] = 'Empty Text';
  $handler->display->display_options['empty']['area']['empty'] = FALSE;
  $handler->display->display_options['empty']['area']['content'] = '<p>No past notifications are available to display.</p>';
  $handler->display->display_options['empty']['area']['format'] = '1';
  $handler->display->display_options['empty']['area']['tokenize'] = 0;
  /* Field: Urban Airship notification: Notification */
  $handler->display->display_options['fields']['notification']['id'] = 'notification';
  $handler->display->display_options['fields']['notification']['table'] = 'urban_airship_push_notification';
  $handler->display->display_options['fields']['notification']['field'] = 'notification';
  $handler->display->display_options['fields']['notification']['label'] = '';
  $handler->display->display_options['fields']['notification']['alter']['alter_text'] = 0;
  $handler->display->display_options['fields']['notification']['alter']['make_link'] = 0;
  $handler->display->display_options['fields']['notification']['alter']['absolute'] = 0;
  $handler->display->display_options['fields']['notification']['alter']['external'] = 0;
  $handler->display->display_options['fields']['notification']['alter']['replace_spaces'] = 0;
  $handler->display->display_options['fields']['notification']['alter']['trim_whitespace'] = 0;
  $handler->display->display_options['fields']['notification']['alter']['nl2br'] = 0;
  $handler->display->display_options['fields']['notification']['alter']['word_boundary'] = 1;
  $handler->display->display_options['fields']['notification']['alter']['ellipsis'] = 1;
  $handler->display->display_options['fields']['notification']['alter']['strip_tags'] = 0;
  $handler->display->display_options['fields']['notification']['alter']['trim'] = 0;
  $handler->display->display_options['fields']['notification']['alter']['html'] = 0;
  $handler->display->display_options['fields']['notification']['element_label_colon'] = FALSE;
  $handler->display->display_options['fields']['notification']['element_default_classes'] = 1;
  $handler->display->display_options['fields']['notification']['hide_empty'] = 0;
  $handler->display->display_options['fields']['notification']['empty_zero'] = 0;
  $handler->display->display_options['fields']['notification']['hide_alter_empty'] = 0;
  /* Field: Urban Airship notification: Time */
  $handler->display->display_options['fields']['created']['id'] = 'created';
  $handler->display->display_options['fields']['created']['table'] = 'urban_airship_push_notification';
  $handler->display->display_options['fields']['created']['field'] = 'created';
  $handler->display->display_options['fields']['created']['label'] = '';
  $handler->display->display_options['fields']['created']['alter']['alter_text'] = 0;
  $handler->display->display_options['fields']['created']['alter']['make_link'] = 0;
  $handler->display->display_options['fields']['created']['alter']['absolute'] = 0;
  $handler->display->display_options['fields']['created']['alter']['external'] = 0;
  $handler->display->display_options['fields']['created']['alter']['replace_spaces'] = 0;
  $handler->display->display_options['fields']['created']['alter']['trim_whitespace'] = 0;
  $handler->display->display_options['fields']['created']['alter']['nl2br'] = 0;
  $handler->display->display_options['fields']['created']['alter']['word_boundary'] = 1;
  $handler->display->display_options['fields']['created']['alter']['ellipsis'] = 1;
  $handler->display->display_options['fields']['created']['alter']['strip_tags'] = 0;
  $handler->display->display_options['fields']['created']['alter']['trim'] = 0;
  $handler->display->display_options['fields']['created']['alter']['html'] = 0;
  $handler->display->display_options['fields']['created']['element_label_colon'] = FALSE;
  $handler->display->display_options['fields']['created']['element_default_classes'] = 1;
  $handler->display->display_options['fields']['created']['hide_empty'] = 0;
  $handler->display->display_options['fields']['created']['empty_zero'] = 0;
  $handler->display->display_options['fields']['created']['hide_alter_empty'] = 0;
  $handler->display->display_options['fields']['created']['date_format'] = 'long';
  /* Field: Urban Airship notification: Bulk operations */
  $handler->display->display_options['fields']['views_bulk_operations']['id'] = 'views_bulk_operations';
  $handler->display->display_options['fields']['views_bulk_operations']['table'] = 'urban_airship_push_notification';
  $handler->display->display_options['fields']['views_bulk_operations']['field'] = 'views_bulk_operations';
  /* Sort criterion: Urban Airship notification: Time */
  $handler->display->display_options['sorts']['created']['id'] = 'created';
  $handler->display->display_options['sorts']['created']['table'] = 'urban_airship_push_notification';
  $handler->display->display_options['sorts']['created']['field'] = 'created';
  $handler->display->display_options['sorts']['created']['order'] = 'DESC';
  
  /* Display: Page */
  $handler = $view->new_display('page', 'Page', 'page');
  $handler->display->display_options['path'] = 'messages';
  
  /* Display: Page (with Page Title) */
  $handler = $view->new_display('page_with_page_title', 'Page (with Page Title)', 'page_with_page_title_1');
  $handler->display->display_options['defaults']['title'] = FALSE;
  $handler->display->display_options['title'] = 'Delete Push Notifications';
  $handler->display->display_options['defaults']['access'] = FALSE;
  $handler->display->display_options['access']['type'] = 'perm';
  $handler->display->display_options['access']['perm'] = 'send push notifications';
  $handler->display->display_options['defaults']['style_plugin'] = FALSE;
  $handler->display->display_options['style_plugin'] = 'table';
  $handler->display->display_options['style_options']['columns'] = array(
    'notification' => 'notification',
    'created' => 'created',
  );
  $handler->display->display_options['style_options']['default'] = '-1';
  $handler->display->display_options['style_options']['info'] = array(
    'notification' => array(
      'sortable' => 0,
      'default_sort_order' => 'asc',
      'align' => '',
      'separator' => '',
    ),
    'created' => array(
      'sortable' => 0,
      'default_sort_order' => 'asc',
      'align' => '',
      'separator' => '',
    ),
  );
  $handler->display->display_options['style_options']['override'] = 1;
  $handler->display->display_options['style_options']['sticky'] = 0;
  $handler->display->display_options['style_options']['empty_table'] = 0;
  $handler->display->display_options['defaults']['style_options'] = FALSE;
  $handler->display->display_options['defaults']['row_plugin'] = FALSE;
  $handler->display->display_options['defaults']['row_options'] = FALSE;
  $handler->display->display_options['defaults']['fields'] = FALSE;
  /* Field: Urban Airship notification: Bulk operations */
  $handler->display->display_options['fields']['views_bulk_operations']['id'] = 'views_bulk_operations';
  $handler->display->display_options['fields']['views_bulk_operations']['table'] = 'urban_airship_push_notification';
  $handler->display->display_options['fields']['views_bulk_operations']['field'] = 'views_bulk_operations';
  $handler->display->display_options['fields']['views_bulk_operations']['label'] = '';
  $handler->display->display_options['fields']['views_bulk_operations']['alter']['alter_text'] = 0;
  $handler->display->display_options['fields']['views_bulk_operations']['alter']['make_link'] = 0;
  $handler->display->display_options['fields']['views_bulk_operations']['alter']['absolute'] = 0;
  $handler->display->display_options['fields']['views_bulk_operations']['alter']['external'] = 0;
  $handler->display->display_options['fields']['views_bulk_operations']['alter']['replace_spaces'] = 0;
  $handler->display->display_options['fields']['views_bulk_operations']['alter']['trim_whitespace'] = 0;
  $handler->display->display_options['fields']['views_bulk_operations']['alter']['nl2br'] = 0;
  $handler->display->display_options['fields']['views_bulk_operations']['alter']['word_boundary'] = 1;
  $handler->display->display_options['fields']['views_bulk_operations']['alter']['ellipsis'] = 1;
  $handler->display->display_options['fields']['views_bulk_operations']['alter']['strip_tags'] = 0;
  $handler->display->display_options['fields']['views_bulk_operations']['alter']['trim'] = 0;
  $handler->display->display_options['fields']['views_bulk_operations']['alter']['html'] = 0;
  $handler->display->display_options['fields']['views_bulk_operations']['element_label_colon'] = FALSE;
  $handler->display->display_options['fields']['views_bulk_operations']['element_default_classes'] = 1;
  $handler->display->display_options['fields']['views_bulk_operations']['hide_empty'] = 0;
  $handler->display->display_options['fields']['views_bulk_operations']['empty_zero'] = 0;
  $handler->display->display_options['fields']['views_bulk_operations']['hide_alter_empty'] = 0;
  $handler->display->display_options['fields']['views_bulk_operations']['vbo']['entity_load_capacity'] = '10';
  $handler->display->display_options['fields']['views_bulk_operations']['vbo']['operations'] = array(
    'views_bulk_operations_delete_item' => array(
      'selected' => 0,
      'use_queue' => 0,
      'skip_confirmation' => 0,
      'override_label' => 0,
      'label' => '',
    ),
    'views_queue_operations_item_delete_action' => array(
      'selected' => 0,
      'use_queue' => 0,
      'skip_confirmation' => 0,
      'override_label' => 0,
      'label' => '',
    ),
    'urban_airship_item_delete_action' => array(
      'selected' => 1,
      'use_queue' => 0,
      'skip_confirmation' => 0,
      'override_label' => 0,
      'label' => '',
    ),
    'system_message_action' => array(
      'selected' => 0,
      'use_queue' => 0,
      'skip_confirmation' => 0,
      'override_label' => 0,
      'label' => '',
    ),
    'views_bulk_operations_script_action' => array(
      'selected' => 0,
      'use_queue' => 0,
      'skip_confirmation' => 0,
      'override_label' => 0,
      'label' => '',
    ),
    'views_bulk_operations_argument_selector_action' => array(
      'selected' => 0,
      'skip_confirmation' => 0,
      'override_label' => 0,
      'label' => '',
    ),
    'system_goto_action' => array(
      'selected' => 0,
      'use_queue' => 0,
      'skip_confirmation' => 0,
      'override_label' => 0,
      'label' => '',
    ),
    'views_queue_operations_item_release_action' => array(
      'selected' => 0,
      'use_queue' => 0,
      'skip_confirmation' => 0,
      'override_label' => 0,
      'label' => '',
    ),
    'system_send_email_action' => array(
      'selected' => 0,
      'use_queue' => 0,
      'skip_confirmation' => 0,
      'override_label' => 0,
      'label' => '',
    ),
  );
  $handler->display->display_options['fields']['views_bulk_operations']['vbo']['enable_select_all_pages'] = 1;
  $handler->display->display_options['fields']['views_bulk_operations']['vbo']['display_type'] = '1';
  $handler->display->display_options['fields']['views_bulk_operations']['vbo']['display_result'] = 1;
  $handler->display->display_options['fields']['views_bulk_operations']['vbo']['merge_single_action'] = 0;
  $handler->display->display_options['fields']['views_bulk_operations']['vbo']['force_single'] = 0;
  /* Field: Urban Airship notification: Time */
  $handler->display->display_options['fields']['created']['id'] = 'created';
  $handler->display->display_options['fields']['created']['table'] = 'urban_airship_push_notification';
  $handler->display->display_options['fields']['created']['field'] = 'created';
  $handler->display->display_options['fields']['created']['alter']['alter_text'] = 0;
  $handler->display->display_options['fields']['created']['alter']['make_link'] = 0;
  $handler->display->display_options['fields']['created']['alter']['absolute'] = 0;
  $handler->display->display_options['fields']['created']['alter']['external'] = 0;
  $handler->display->display_options['fields']['created']['alter']['replace_spaces'] = 0;
  $handler->display->display_options['fields']['created']['alter']['trim_whitespace'] = 0;
  $handler->display->display_options['fields']['created']['alter']['nl2br'] = 0;
  $handler->display->display_options['fields']['created']['alter']['word_boundary'] = 1;
  $handler->display->display_options['fields']['created']['alter']['ellipsis'] = 1;
  $handler->display->display_options['fields']['created']['alter']['strip_tags'] = 0;
  $handler->display->display_options['fields']['created']['alter']['trim'] = 0;
  $handler->display->display_options['fields']['created']['alter']['html'] = 0;
  $handler->display->display_options['fields']['created']['element_label_colon'] = 0;
  $handler->display->display_options['fields']['created']['element_default_classes'] = 1;
  $handler->display->display_options['fields']['created']['hide_empty'] = 0;
  $handler->display->display_options['fields']['created']['empty_zero'] = 0;
  $handler->display->display_options['fields']['created']['hide_alter_empty'] = 0;
  $handler->display->display_options['fields']['created']['date_format'] = 'long';
  /* Field: Urban Airship notification: Notification */
  $handler->display->display_options['fields']['notification']['id'] = 'notification';
  $handler->display->display_options['fields']['notification']['table'] = 'urban_airship_push_notification';
  $handler->display->display_options['fields']['notification']['field'] = 'notification';
  $handler->display->display_options['fields']['notification']['alter']['alter_text'] = 0;
  $handler->display->display_options['fields']['notification']['alter']['make_link'] = 0;
  $handler->display->display_options['fields']['notification']['alter']['absolute'] = 0;
  $handler->display->display_options['fields']['notification']['alter']['external'] = 0;
  $handler->display->display_options['fields']['notification']['alter']['replace_spaces'] = 0;
  $handler->display->display_options['fields']['notification']['alter']['trim_whitespace'] = 0;
  $handler->display->display_options['fields']['notification']['alter']['nl2br'] = 0;
  $handler->display->display_options['fields']['notification']['alter']['word_boundary'] = 1;
  $handler->display->display_options['fields']['notification']['alter']['ellipsis'] = 1;
  $handler->display->display_options['fields']['notification']['alter']['strip_tags'] = 0;
  $handler->display->display_options['fields']['notification']['alter']['trim'] = 0;
  $handler->display->display_options['fields']['notification']['alter']['html'] = 0;
  $handler->display->display_options['fields']['notification']['element_label_colon'] = 0;
  $handler->display->display_options['fields']['notification']['element_default_classes'] = 1;
  $handler->display->display_options['fields']['notification']['hide_empty'] = 0;
  $handler->display->display_options['fields']['notification']['empty_zero'] = 0;
  $handler->display->display_options['fields']['notification']['hide_alter_empty'] = 0;
  $handler->display->display_options['path'] = 'admin/ua-vbo';
  $handler->display->display_options['menu']['type'] = 'normal';
  $handler->display->display_options['menu']['title'] = 'Delete Push Notification(s)';
  $handler->display->display_options['menu']['weight'] = '0';
  $handler->display->display_options['menu']['name'] = 'management';

  $views[$view->name] = $view;

  return $views;
}

/**
 * Implements hook_entity_info().
 *
 * The "urban_airship_push_notification" table hasn't been defined as a entity in Drupal 7
 * so we need to wrap around to have it candidate for VBO.
 */
function urban_airship_entity_info() {
  return array(
    'urban_airship_push_notification' => array(
      'label' => t('Urban Airship Entity'),
      'base table' => 'urban_airship_push_notification',
      'entity keys' => array(
        'id' => 'id',
      ),
      'label callback' => 'urban_airship_label',
    ),
  );
}

/**
 * Label callback for "urban_airship_push_notification" entity.
 */
function urban_airship_label($item) {
  return '#' . $item->id . ' [' . $item->notification . ']';
}

/**
 * Implements hook_action_info().
 */
function urban_airship_action_info() {
  return array(
    'urban_airship_item_delete_action' => array(
      'type' => 'entity',
      'label' => t('Delete Urban Airship push notification(s)'),
      'configurable' => FALSE,
    ),
  );
}

/**
 * Action callback for "urban_airship_item_delete_action" action.
 */
function urban_airship_item_delete_action($entity, $context) {
  $info = entity_get_info($context['entity_type']);
  $entity_id = $entity->{$info['entity keys']['id']};

  // Delete those rows from our custom table
  $num_deleted = db_delete('urban_airship_push_notification')
  ->condition('id', $entity_id)
  ->execute();
}